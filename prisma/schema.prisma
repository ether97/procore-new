// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

enum EFinish {
  MATTE
  GLOSS
}

enum EFrame {
  NONE
  GRAPHITE
  WHITE_WOOD
  BLACK_WOOD
  NATURAL_WOOD
}

enum ESize {
  MEDIUM
  LARGE
  EXTRA_LARGE  
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}



model User {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  email           String?   @unique
  emailVerified   DateTime?
  image           String?
  hashedPassword  String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  favoriteIds     String[] @db.ObjectId

  accounts        Account[]
  displates       Displate[] 
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user               User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}


model Displate {
  id                 String @db.ObjectId @id @default(auto()) @map("_id")
  userId             String @db.ObjectId
  finish             EFinish @default(MATTE)
  frame              EFrame @default(NONE)
  size               ESize @default(MEDIUM)
  price              Int? @default(44)
  info               String @db.ObjectId

  user               User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model DisplateInfo {
  id                 String @db.ObjectId @id @default(auto()) @map("_id")
  title              String
  category           String
  img                String
  
}